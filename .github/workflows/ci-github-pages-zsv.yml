name: github_pages_zsv

on:
  push:
    branches: [main]

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      TAG: ${{ github.sha }}
      PREFIX: amd64-linux-wasm

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: liquidaty/zsv

    - name: Update version in index.html
      run: sed "s|__VERSION__|$TAG|g" -i playground/index.html

    - name: Cache
      uses: actions/cache@v4
      id: cache
      with:
        key: ${{ env.PREFIX }}
        path: ${{ env.PREFIX }}

    - name: Set up emsdk
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      uses: mymindstorm/setup-emsdk@v14

    - name: Build
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      env:
        CC: emcc
        MAKE: make
        RUN_TESTS: false
        CONFIGFILE: "config.emcc"
        CFLAGS: "-msse2 -msimd128"
        CROSS_COMPILING: "yes"
        NO_THREADING: "1"
        STATIC_BUILD: "1"
      run: |
        emconfigure ./configure --enable-pic --disable-pie
        emmake make install NO_STDIN=1 NO_PLAYGROUND=0

    - name: Copy wasm and js files
      run: cp "$PREFIX"/bin/cli.em.{js,wasm} playground

    # - name: Patch index.html
    #   env:
    #     DIFF: |
    #       diff --git a/playground/index.html b/playground/index.html
    #       index b8e7b0b..3b87fc0 100644
    #       --- a/playground/index.html
    #       +++ b/playground/index.html
    #       @@ -133,7 +133,7 @@
    #                return (...args) => {
    #                  const output = args.join(' ');
    #                  if (zsvAutocompletionsPopulated) {
    #       -            $('body').terminal().echo($.terminal.escape_brackets(output), { flush: false });
    #       +            $('body').terminal().echo($.terminal.escape_brackets(output), { flush: false, raw: true });
    #                  } else {
    #                    parseFlagsAndCommands(output);
    #                  }
    #   run: git apply <<<"$DIFF"

    - name: Upload GitHub Pages artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: playground

  deploy:
    needs: ci
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
