name: build_tibetan_ocr_app_osx_amd64

on:
  push:
    paths: ['.github/workflows/ci-build-tibetan-ocr-app-osx-amd64.yml']
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-13, macos-latest]

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v4

    - name: Set required env vars
      env:
        ARTIFACT_PATH: ${{ runner.os == 'macOS' && 'OSXBuild/*' || 'WindowsBuild/*' }}
      run: |
        OS=$(echo "$RUNNER_OS" | tr '[[:upper:]]' '[[:lower:]]')
        ARCH=$(echo "$RUNNER_ARCH" | tr '[[:upper:]]' '[[:lower:]]')
        {
          echo "VERSION=0.0.0"
          echo "ARTIFACT_NAME=bdrc_ocr_$OS_$ARCH_$VERSION"
          echo "ARTIFACT_PATH=$ARTIFACT_PATH"
        } >>"$GITHUB_ENV"

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2

    - name: Cache Nuitka
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/.nuitka_cache
        key: ${{ runner.os }}-nuitka

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nuitka
        pip install pyside6
        pip install -r requirements.txt
        pyside6-rcc resources.qrc -o resources.py

    - name: Build with Nuitka (macOS)
      if: ${{ runner.os == 'macOS' }}
      run: |
        python -m nuitka --standalone \
          --output-dir=OSXBuild \
          --plugin-enable=pyside6 \
          --verbose \
          --company-name="Buddhist Digital Resource Center" \
          --product-name="Tibetan OCR App" \
          --file-version='${{ env.VERSION }}' \
          --product-version='${{ env.VERSION }}' \
          --macos-app-name="BDRC Tibetan OCR App" \
          --macos-signed-app-name="io.bdrc.ocrapp" \
          --macos-create-app-bundle \
          --macos-app-icon=logo.icns \
          --include-data-dir=./Assets=Assets \
          --include-data-dir=./Models=Models \
          main.py

    - name: Build with Nuitka (Windows)
      if: ${{ runner.os == 'Windows' }}
      run: |
        python -m nuitka --standalone \
          --windows-console-mode=disable \
          --assume-yes-for-downloads \
          --output-dir=WindowsBuild \
          --plugin-enable=pyside6 \
          --windows-icon-from-ico=logo.ico \
          --company-name="Buddhist Digital Resource Center" \
          --product-name="Tibetan OCR App" \
          --file-version='${{ env.VERSION }}' \
          --product-version='${{ env.VERSION }}' \
          --include-data-dir=./Assets=Assets \
          --include-data-dir=./Models=Models \
          main.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.ARTIFACT_PATH }}
