name: ci

on:
  push:
    branches: [main]
    paths-ignore: ['**.md']
  pull_request:
    branches: [main]
    paths-ignore: ['**.md']
  release:
    branches: [main]
    types: [created]

jobs:

  ci:
    runs-on: ubuntu-18.04
    
    # env:
    #   FILE: test.txt

    steps:
      # - name: Create file
      #   run: |
      #     echo 'test' > $FILE
      #     cat $FILE

      - name: Create Test RPM
        run: |
          sudo apt install -y rpm alien
          rm -rf ~/rpmbuild
          mkdir -p ~/rpmbuild/SPECS ~/rpmbuild/SOURCES
          echo ">> Creating test script"
          cat << EOF > ~/rpmbuild/SOURCES/test
          #!/bin/sh
          echo "testing..."
          EOF
          chmod +x ~/rpmbuild/SOURCES/test
          ls -Gghl ~/rpmbuild/SOURCES/test
          cat ~/rpmbuild/SOURCES/test
          echo ">> Creating spec file"
          cat << EOF > ~/rpmbuild/SPECS/test.spec
          %define _rpmfilename test
          Name: test
          Version: 1
          Release: 1%{?dist}
          Summary: test
          License: MIT

          %description
          Testing RPM creation

          %prep
          cp -fa %{_sourcedir}/test %{_builddir}/test

          %install
          mkdir -p %{buildroot}/%{_bindir}
          cp -fa %{_builddir}/test %{buildroot}/%{_bindir}/
          tree %{buildroot}

          %files
          %{_bindir}/test
          EOF
          cat ~/rpmbuild/SPECS/test.spec
          cd ~/rpmbuild/SPECS
          rpmbuild -ba test.spec
          ls -hl ~/rpmbuild/RPMS/
          echo "Installing RPM with alien"
          sudo alien -i ~/rpmbuild/RPMS/test.rpm
          which test
          test
          echo "--- [DONE] ---"

      # - name: Get tag
      #   if: startsWith(github.ref, 'refs/tags/v')
      #   id: tag
      #   uses: dawidd6/action-get-tag@v1
      #   with:
      #     strip_v: true

      # - name: Use tag
      #   if: startsWith(github.ref, 'refs/tags/v')
      #   env:
      #     TAG: ${{ steps.tag.outputs.tag }}
      #   run: |
      #     mv $FILE "$TAG-$FILE"
      #     ls -Gghl 

      # - uses: actions/checkout@v2

      # - name: Set up ccache
      #   uses: hendrikmuhs/ccache-action@v1.2

      # - name: Verify ccache and update GITHUB_PATH
      #   run: |
      #     which ccache
      #     ccache --version
      #     echo '/usr/lib/ccache' >> $GITHUB_PATH
      #     which gcc
      #     echo '--- [DONE] ---'

      # - uses: rui314/setup-mold@2a0eac129273d80a0511fcf8aa9d1986fafa16d2
      #   with:
      #     mold-version: 1.1.1

      # - name: Run script
      #   run: |
      #     echo 'Testing...'
      #     which gcc
      #     which g++
      #     go env
      #     which ld
      #     whereis ld
      #     realpath /usr/bin/ld
      #     ld --version
      #     echo '--- [DONE] ---'

      # - name: Generate artifact
      #   run: |
      #     echo 'Test' > artifact.txt

      # - name: Upload artifact [macOS]
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: artifact.txt
      #     path: artifact.txt
      #     if-no-files-found: error
      #     retention-days: 1

      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: |
      #       artifact.txt

      # - name: Build docker image
      #   run: |
      #     docker build . -t ruby-thrift:latest
