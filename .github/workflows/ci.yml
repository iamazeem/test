name: ci

on:
  push:
    branches: [main]
    paths-ignore: ['**.md']
  pull_request:
    branches: [main]
    paths-ignore: ['**.md']
  release:
    branches: [main]
    types: [created]

jobs:

  ci:
    name: ci
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]

    runs-on: ${{ matrix.os }}

    # env:
    #   FILE: test.txt

    steps:
      - name: Install jq-1.6
        # if: runner.os == 'Linux'
        run: |
          wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-1.6.tar.gz
          tar xf jq-1.6.tar.gz
          cd jq-1.6
          CFLAGS='-O3' ./configure \
            --disable-maintainer-mode \
            --without-oniguruma \
            --disable-docs \
            --disable-shared \
            --enable-static
          sudo make install
          whereis jq libjq

      # - name: Create file
      #   run: |
      #     echo 'test' > $FILE
      #     cat $FILE

      # - name: Create Test RPM
      #   run: |
      #     sudo apt install -y rpm alien
      #     rm -rf ~/rpmbuild
      #     mkdir -p ~/rpmbuild/SPECS ~/rpmbuild/SOURCES
      #     echo ">> Creating Test script"
      #     cat << EOF > ~/rpmbuild/SOURCES/Test
      #     #!/bin/sh
      #     echo "testing..."
      #     EOF
      #     chmod +x ~/rpmbuild/SOURCES/Test
      #     ls -Gghl ~/rpmbuild/SOURCES/Test
      #     cat ~/rpmbuild/SOURCES/Test
      #     echo ">> Creating spec file"
      #     cat << EOF > ~/rpmbuild/SPECS/Test.spec
      #     %define _rpmfilename Test.rpm
      #     Name: Test
      #     Version: 1
      #     Release: 1%{?dist}
      #     Summary: Test
      #     License: MIT

      #     %description
      #     Testing RPM creation

      #     %prep
      #     cp -fa %{_sourcedir}/Test %{_builddir}/Test

      #     %install
      #     mkdir -p %{buildroot}/%{_bindir}
      #     cp -fa %{_builddir}/Test %{buildroot}/%{_bindir}/
      #     tree %{buildroot}

      #     %files
      #     %{_bindir}/Test
      #     EOF
      #     cat ~/rpmbuild/SPECS/Test.spec
      #     cd ~/rpmbuild/SPECS
      #     rpmbuild -bb Test.spec
      #     ls -hl ~/rpmbuild/RPMS/
      #     echo "Installing RPM with alien"
      #     sudo alien -i ~/rpmbuild/RPMS/Test.rpm
      #     which Test
      #     Test
      #     echo "--- [DONE] ---"

      # - name: Get tag
      #   if: startsWith(github.ref, 'refs/tags/v')
      #   id: tag
      #   uses: dawidd6/action-get-tag@v1
      #   with:
      #     strip_v: true

      # - name: Use tag
      #   if: startsWith(github.ref, 'refs/tags/v')
      #   env:
      #     TAG: ${{ steps.tag.outputs.tag }}
      #   run: |
      #     mv $FILE "$TAG-$FILE"
      #     ls -Gghl 

      # - uses: actions/checkout@v2

      # - name: Set up ccache
      #   uses: hendrikmuhs/ccache-action@v1.2

      # - name: Verify ccache and update GITHUB_PATH
      #   run: |
      #     which ccache
      #     ccache --version
      #     echo '/usr/lib/ccache' >> $GITHUB_PATH
      #     which gcc
      #     echo '--- [DONE] ---'

      # - uses: rui314/setup-mold@2a0eac129273d80a0511fcf8aa9d1986fafa16d2
      #   with:
      #     mold-version: 1.1.1

      # - name: Run script
      #   run: |
      #     echo 'Testing...'
      #     which gcc
      #     which g++
      #     go env
      #     which ld
      #     whereis ld
      #     realpath /usr/bin/ld
      #     ld --version
      #     echo '--- [DONE] ---'

      # - name: Generate artifact
      #   run: |
      #     echo 'Test' > artifact.txt

      # - name: Upload artifact [macOS]
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: artifact.txt
      #     path: artifact.txt
      #     if-no-files-found: error
      #     retention-days: 1

      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: |
      #       artifact.txt

      # - name: Build docker image
      #   run: |
      #     docker build . -t ruby-thrift:latest
